1. General-purpose descriptors (범용 사용자 설정)
 사용자 정의 해야된대.
 뭐 이건 나중에 jwt 토큰으로 토큰값 말아서 필터에서 처리하면 되는거니
 난 뺀다.

 뭐 일단
 SuppleProperty란애가 있고
 EssentialProperty가 있대

 이건 내가 취업 되면 적용이 되있을꺼라 상관 안할래.

 2. Background on DASH profile concept (Dash 프로필 개념의 배경)

 이것도 뭐 서비스 할때 프로토콜 어떻게 정할지 뭐 이런건가봐.
 머리좋으신 석사분들이 할태니 그사람들꺼 받아쓰는걸로하자.

 3. Dynamic aspects
 다이나믹한 DASH 의 서비스!!
 얜
 MPD의 @type 이 'dynamic' 으로 전송된 DASH Media Presentaions 가 있다.
 이놈은 시간이 지남에 따라 미디어의 가용성을 제거할 수도 있다.

 이러한 동적 서비스들은
  3-1. Dynamic Distribution of Available Content
  동적 콘텐츠로 제공되지만 콘텐츠는 배포 전에 모두 사용할 수 있는 서비스.
  이 경우 세그먼트의 세부 정보가 알려지며 MPD 업데이트 없이 단일 MPD로 발표될 수 있다.

  3-2. MPD-controlled Live Service

  콘텐츠가 일반적으로 즉시 생성되는 서비스 및 MPD는 서비스 오퍼링의 변화를 반영하기 위해
  때때로 업데이트되어야 한다. 그러한 서비스를 위해,
  DASH 클라이언트는 MPD의 정보에만 의존하여 운영된다.

여기선 mpd를 업데이트하는 mpd patch 를 하용하겠내
새롭게 받아와서 변하게 있나 없나를 보는거니까.

  3-3. MPD and Segment-controlled Live
  콘텐츠가 일반적으로 즉시 생성되는 서비스 및 MPD는
  서비스 오퍼링의 변화를 반영하기 위해 단기간에 업데이트되어야 할 수 있다.
  그러한 서비스의 경우, DASH 클라이언트는 MPD의 정보에 따라 작동하며
  적절한 작동을 위해 관련 정보를 추출하기 위해 세그먼트를 구문 분석할 것으로 예상된다

  그럼 여기선.. 무슨이벤트를쓰니?  period 가 mpd에 있어야지 다음 segment를 분석할탠대.. 이건 좀 어렵내..

  느낌상 보통 mpd-controlled live service를 쓸꺼같은대. 브라우저 성능이 좋차너?


이런 동적 서비스들의 기본 구조들은 그림 1_1.PNG 에 잘 설명되어있다.

Dynamic DASH client (동적 DASH 클라이언트):
단일 MPD를 기반으로 사용 가능한 세그먼트 목록을 만들고 있다.
그런 다음 라이브 에지에서 세그먼트를 다운로드하여 결합하거나 사용 가능한 시간 이동 버퍼를 사용할 수 있다.

Simple Live Client
동적 클라이언트의 모든 기능을 포함한다.
또한 라이브 에지에서 세그먼트 리스트를 확장하기 위해 MPD의 정보를 기반으로 MPD를 업데이트한다.
MPD는 현재 사용 가능한 MPD가 만료되면 재설치되고 재검증된다.
즉, 더 이상 세그먼트 URL 생성에 사용할 수 없다.

Main Live Client
동적 클라이언트와 MPD 기반 DASH 클라이언트의 모든 기능을 포함한다.
또한 서비스 오퍼링이 이 기능을 제공하는 경우, 그것은 세그먼트의 정보에 기초하여 MPD를 업데이트한다.
MPD는 세그먼트의 만료 정보를 기반으로 현재 사용 가능한 MPD가 만료되면 다시 설정 및 재확인을 받는다



=====================음 지금까지 기본 구조및 설명을 확인하였습니다요.